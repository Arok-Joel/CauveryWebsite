generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  password      String
  phone         String
  address       String?
  pincode       String?
  role          UserRole       @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  announcements Announcement[]
  employee      Employee?
}

model Team {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  leaderId  String     @unique
  members   Employee[] @relation("TeamMembers")
  leader    Employee   @relation("TeamLeader", fields: [leaderId], references: [id])
}

model Employee {
  id               String       @id @default(cuid())
  guardianName     String
  dateOfBirth      DateTime
  age              Int
  gender           String
  pancardNumber    String       @unique
  aadharCardNumber String       @unique
  bankName         String
  bankBranch       String
  accountNumber    String
  ifscCode         String
  dateOfJoining    DateTime
  employeeRole     EmployeeRole
  userId           String       @unique
  teamId           String?
  reportsToId      String?
  memberOfTeam     Team?        @relation("TeamMembers", fields: [teamId], references: [id])
  user             User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  leadsTeam        Team?        @relation("TeamLeader")
  reportsTo        Employee?    @relation("EmployeeReporting", fields: [reportsToId], references: [id])
  subordinates     Employee[]   @relation("EmployeeReporting")
}

model Announcement {
  id        String   @id @default(cuid())
  title     String
  content   String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  adminId   String
  admin     User     @relation(fields: [adminId], references: [id])
}

model Layout {
  id        String   @id
  name      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime
  Plot      Plot[]
}

model Plot {
  id          String   @id
  plotNumber  String   @unique
  siteName    String
  size        String
  plotAddress String
  price       Decimal
  dimensions  String
  facing      String
  status      String
  coordinates Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  layoutId    String?
  Layout      Layout?  @relation(fields: [layoutId], references: [id])
}

enum UserRole {
  ADMIN
  USER
  EMPLOYEE
}

enum EmployeeRole {
  EXECUTIVE_DIRECTOR
  DIRECTOR
  JOINT_DIRECTOR
  FIELD_OFFICER
}
